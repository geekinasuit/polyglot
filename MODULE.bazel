module(name = "polyglot")

#
# Note: A lot of kotlin and proto/grpc stuff in here requires special handling, because grpc-kotlin does not yet
# support BZLMOD for dependency management. It therefore has hard-coded names, like io_bazel_rules_kotlin, and
# com_google_guava_guava, requiring these to be loaded with particular names. As soon as grpc-kotlin supports bzlmod,
# this configuration becomes quite a bit simpler.
#

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_go", version = "0.53.0")
bazel_dep(name = "gazelle", version = "0.42.0")
bazel_dep(name = "rules_java", version = "8.9.0")
bazel_dep(name = "rules_kotlin", version = "2.1.0")
bazel_dep(name = "rules_jvm_external", version = "6.7")
bazel_dep(name = "rules_rust", version = "0.57.1")
bazel_dep(name = "rules_python", version = "1.1.0")
bazel_dep(name = "protobuf", version = "29.3")
bazel_dep(name = "rules_rust_prost", version = "0.57.1")
bazel_dep(name = "grpc", version = "1.71.0")
bazel_dep(name = "protoc-gen-validate", version = "1.2.1.bcr.1")  # Account for a bug in 1.2.1

# used by GRPC-Kotlin
bazel_dep(name = "grpc-java", version = "1.71.0")
bazel_dep(name = "rules_proto_grpc_java", version = "5.0.1")

# grpc-kotlin does not support bzlmod, so it's loaded in WORKSPACE

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//golang:go.mod")
use_repo(
    go_deps,
    "com_github_emirpasic_gods",
    "com_github_spf13_cobra",
    "com_github_stretchr_testify",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.artifact(
    testonly = True,
    artifact = "truth",
    group = "com.google.truth",
    version = "1.4.4",
)
maven.artifact(
    testonly = True,
    artifact = "junit",
    group = "junit",
    version = "4.13.2",
)
maven.install(
    artifacts = [
        "io.github.oshai:kotlin-logging-jvm:5.1.0",
        "com.github.ajalt.clikt:clikt-jvm:5.0.1",
        "com.google.protobuf:protobuf-java:4.29.3",
        "com.google.protobuf:protobuf-kotlin:4.29.3",
        "io.grpc:grpc-kotlin-stub:1.4.1",
        "io.grpc:grpc-netty-shaded:1.71.0",
        "io.grpc:grpc-protobuf:1.71.0",
        "io.grpc:grpc-stub:1.71.0",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.1",
        "io.grpc:grpc-kotlin-stub:1.4.1",
        "io.grpc:grpc-netty-shaded:1.71.0",
        "com.linecorp.armeria:armeria-grpc:1.26.4",
        "com.linecorp.armeria:armeria:1.26.4",
        "org.slf4j:slf4j-api:2.0.11",
        "org.slf4j:slf4j-jdk14:2.0.11",
    ] + [
        # grpc-kotlin deps
        "com.google.guava:guava:33.3.1-android",
        "com.squareup:kotlinpoet:1.14.2",
        "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.10.1",
        "org.jetbrains.kotlinx:kotlinx-coroutines-debug:1.10.1",
    ],
    fetch_sources = True,
    generate_compat_repositories = True,
    repositories = [
        "m2local",
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
    ],
)
use_repo(maven, "com_google_guava_guava", "maven")  # Guava called out to support kotlin-grpc which doesn't use bzlmod

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    versions = ["1.85.0"],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.from_cargo(
    name = "crates",
    cargo_lockfile = "//:Cargo.lock",
    manifests = [
        "//:Cargo.toml",
        "//rust/bracketslib:Cargo.toml",
    ],
)
use_repo(crate, "crates")

PYTHON_VERSION = "3.11"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = False,
    python_version = PYTHON_VERSION,
)
use_repo(python, "python_3_11", "python_versions", "pythons_hub")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "py_deps",
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements.txt",
)
use_repo(pip, "py_deps")
